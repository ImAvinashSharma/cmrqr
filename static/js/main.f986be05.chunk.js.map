{"version":3,"sources":["App.js","index.js"],"names":["App","useState","data","setData","scannre","setScannre","namePer","setName","useEffect","undefined","homeCol","Date","getHours","db","phone","name","axios","post","message","then","response","console","log","catch","error","alert","SendMsg","className","width","height","delay","torch","onUpdate","err","result","text","type","onClick","e","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRA8EeA,MAvEf,WAAgB,IAAD,EACWC,qBADX,mBACNC,EADM,KACAC,EADA,OAEiBF,oBAAS,GAF1B,mBAENG,EAFM,KAEGC,EAFH,OAGcJ,mBAAS,IAHvB,mBAGNK,EAHM,KAGGC,EAHH,KA6Cb,OANAC,qBAAU,gBACKC,IAATP,GA/BN,SAAiBA,GACf,IACMQ,EAAmB,SADD,IAAIC,MALTC,YACG,GAAK,KAAO,MAKF,UAAY,OAC5C,GAAIC,EAAGX,GAAO,CACZ,IAAMY,EAAQD,EAAGX,GAAM,GAAGY,MACpBC,EAAOF,EAAGX,GAAM,GAAGa,KACzBR,EAAQQ,EAAO,6BACfC,IACGC,KAAK,mDAAoD,CACxDH,MAAOA,EACPI,QAAQ,GAAD,OAAKH,EAAL,6BAA8BL,EAA9B,OAERS,MAAK,SAAUC,GACdjB,OAAQM,GACRY,QAAQC,IAAIF,MAEbG,OAAM,SAAUC,GACfrB,OAAQM,GACRF,EAAQ,IACRc,QAAQC,IAAIE,GACZC,MAAM,8CAEVJ,QAAQC,IAAIT,EAAGX,GAAM,GAAGa,KAAO,IAAMF,EAAGX,GAAM,GAAGY,YAEjDW,MAAM,wBACNlB,EAAQ,IACRJ,OAAQM,GAMRiB,CAAQxB,KAET,CAACA,IAGF,sBAAKyB,UAAU,YAAf,WACe,IAAZvB,EACC,sBAAKuB,UAAU,YAAf,UACE,cAAC,IAAD,CACEC,MAAO,IACPC,OAAQ,IACRC,MAAO,IACPC,OAAO,EACPC,SAAU,SAACC,EAAKC,GACVA,GACF/B,EAAQ+B,EAAOC,SAIrB,4BAAIjC,IACJ,4BAAII,OAEJ,KACJ,wBAAQqB,UAAU,MAAMS,KAAK,SAASC,QAAS,SAAAC,GAAC,OAAIjC,GAAYD,IAAhE,UACe,IAAZA,EAAmB,OAAS,aCnErCmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.f986be05.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport db from \"./db.json\";\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\n\nfunction App() {\n  const [data, setData] = useState();\n  const [scannre, setScannre] = useState(true);\n  const [namePer, setName] = useState(\"\");\n  function formatAMPM(date) {\n    const hours = date.getHours();\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\n    return ampm;\n  }\n  function SendMsg(data) {\n    const ampm = formatAMPM(new Date());\n    const homeCol = ampm === \"am\" ? \"College\" : \"Home\";\n    if (db[data]) {\n      const phone = db[data][0].phone;\n      const name = db[data][0].name;\n      setName(name + \"message send successfully\");\n      axios\n        .post(\"https://cmrcet-bus-app.avinshsharma1.repl.co/sms\", {\n          phone: phone,\n          message: `${name} is on the way to ${homeCol}.`\n        })\n        .then(function (response) {\n          setData(undefined);\n          console.log(response);\n        })\n        .catch(function (error) {\n          setData(undefined);\n          setName(\"\");\n          console.log(error);\n          alert(\"Student is already pressent in the BUS \");\n        });\n      console.log(db[data][0].name + \" \" + db[data][0].phone);\n    } else {\n      alert(\"NOT FROM COLLEGE BUS\");\n      setName(\"\");\n      setData(undefined);\n    }\n  }\n\n  useEffect(() => {\n    if (data !== undefined) {\n      SendMsg(data);\n    }\n  }, [data]);\n\n  return (\n    <div className=\"container\">\n      {scannre === true ? (\n        <div className=\"qrScanner\">\n          <BarcodeScannerComponent\n            width={500}\n            height={500}\n            delay={100}\n            torch={true}\n            onUpdate={(err, result) => {\n              if (result) {\n                setData(result.text);\n              }\n            }}\n          />\n          <p>{data}</p>\n          <p>{namePer}</p>\n        </div>\n      ) : null}\n      <button className=\"btn\" type=\"submit\" onClick={e => setScannre(!scannre)}>\n        {scannre !== true ? \"Scan\" : \"Stop\"}\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}